<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Login Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
</head>

<body>
    <nav class="navbar navbar-expand-lg bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="/"> <img src="/images/bootstrap-logo.svg" alt="Bootstrap" width="30"
                    height="24">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" aria-current="page" href="/login/user">User</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/login/admin">Admin</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="w-50 p-3 mt-3 mx-auto">
        <form class="" action="/getAllData" method="GET">
            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">start date</label>
                <input type="date" class="form-control" id="startDate" aria-describedby="emailHelp" name="startDate"
                    value="<%=startDate%>" required>
            </div>
            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">end date</label>
                <input type="date" class="form-control" id="endDate" aria-describedby="emailHelp" name="endDate"
                    value="<%=endDate%>" required>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>

            <button type="button" class="btn btn-warning text-light" onclick="getAllPDFs()" id="downloadBtn">ALL
                PDFs</button>

        </form>


    </div>

    <div class="container">
        <table class="w-50 p-3 mt-3 mx-auto table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Number</th>
                    <th scope="col">Date</th>
                </tr>
            </thead>
            <tbody>
                <% entries.forEach(entry=>{%>
                    <tr>
                        <th scope="row">
                            <%= entry[0]%>
                        </th>
                        <td>
                            <%= entry[1]%>
                        </td>
                        <td>
                            <%= entry[2]%>
                        </td>
                        <td>
                            <%= entry[3]%>
                        </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous">
        </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>

    <script>
        function downloadZip(zipLocation) {
            let URL = `${window.location.origin}/downloadZip`;
            const fileName = "entries.zip";

            $.ajax({
                type: "POST",
                data: { location: zipLocation },
                url: URL,
                cache: false,
                xhr: function () {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 2) {
                            if (xhr.status == 200) {
                                xhr.responseType = "blob";
                            } else {
                                xhr.responseType = "text";
                            }
                        }
                    };
                    return xhr;
                },
                success: async (data) => {
                    var blob = new Blob([data], { type: "application/zip" });

                    var isIE = false || !!document.documentMode;
                    if (isIE) {
                        window.navigator.msSaveBlob(blob, fileName);
                    } else {
                        var url = window.URL || window.webkitURL;
                        link = url.createObjectURL(blob);
                        var a = $("<a />");
                        a.attr("download", fileName);
                        a.attr("href", link);
                        $("body").append(a);
                        a[0].click();
                        $("body").remove(a);
                    }
                },
                error: (res) => {
                    alert("Faced issue while downloading the zip");
                },
            });
        }

        async function savePDF(username, startDate, endDate) {
            let URL = `${window.location.origin}/savePDF`;
            
            await $.ajax({
                type: "POST",
                data: { username: username, startDate: startDate, endDate: endDate },
                url: URL,
                success: async (data) => {
                    if (data.success) {
                        console.log(`saved pdf of user - ${username} at location - ${data.location}`)
                    }
                },
                error: (res) => {
                    alert(`Faced issue while saving the PDF of user - ${username}`);
                },
            });
        }

        function zipFolder() {
            let URL = `${window.location.origin}/zip`;

            $.ajax({
                type: "POST",
                url: URL,
                success: async (data) => {
                    if (data.success) {
                        console.log("successfully created the zip")
                        downloadZip(data.location);
                    }
                },
                error: (res) => {
                    alert("Faced issue while zipping the PDFs");
                }
            });
        }

        function getAllPDFs() {
            let URL = `${window.location.origin}/getAllUser`;
            document.getElementById("downloadBtn").innerHTML = `<div class="spinner-border text-light" role="status"><span class="visually-hidden">Loading...</span></div>`;
            document.getElementById("downloadBtn").disabled = true;
            const startDate = $("#startDate").val();
            const endDate = $("#endDate").val();

            $.ajax({
                type: "POST",
                url: URL,
                success: async (data) => {
                    // saving PDFs
                    for (const username of data["users"]) {
                        await savePDF(username, startDate, endDate)
                    }

                    // zipping the PDFs
                    zipFolder();
                },
                error: (res) => {
                    alert("Faced issue while downloading the PDFs");
                },
                complete: (res) => {
                    document.getElementById("downloadBtn").innerHTML = "ALL PDFs"
                    document.getElementById("downloadBtn").disabled = false;
                }
            });
        }
    </script>


</body>

</html>